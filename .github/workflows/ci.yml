# BSD 3-Clause License
#
# Copyright (c) 2024, Code Crafting With Anton
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


defaults:
  run:
    # This forces shell to be login shell and load the user's profile that activates the conda environment
    # https://github.com/marketplace/actions/setup-micromamba#about-login-shells
    shell: bash -leo pipefail {0}

jobs:
  build:
    strategy:
      #TODO: Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, OSS clang>
      # 2. <Linux, Release, OSS clang>
      # 3. <macOS, Release, OSS clang>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        build_type: [Release]

    runs-on: ${{ matrix.os }}
    env:
      CONAN_PROFILE: "${{ github.workspace }}/.conan/profiles/clang"
    steps:
    - uses: actions/checkout@v4

    - uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        init-shell: bash

    # >>>>>>>> REMOVE ME
    - name: Was template initialized?
      id: conanfile_exists
      run: |
        if [[ -f conanfile.py || -f conanfile.txt ]]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: "REMOVE ME: Conan templates and build selfcheck"
      if: ${{ steps.conanfile_exists.outputs.exists == 'false' }}
      run: |
        set -e
        set -x

        python --version
        conan --version
        cmake --version
        ninja --version

        env | sort

        mkdir foo_exe foo_lib
        pushd foo_exe
          conan new cmake_exe -d name=foo_exe -d version=0.1.0
          conan create . --profile:all="${CONAN_PROFILE}" -s build_type="${{ matrix.build_type }}"
        popd

        pushd foo_lib
          conan new cmake_lib -d name=foo_lib -d version=0.1.0
          conan create . --profile:all="${CONAN_PROFILE}" -s build_type="${{ matrix.build_type }}"
        popd
    # <<<<<<< REMOVE ME

    - name: "Build and test"
      # >>>>>>>> REMOVE ME
      # This if check can be removed once the template is initialized
      if: ${{ steps.conanfile_exists.outputs.exists == 'true' }} 
      # <<<<<<< REMOVE ME
      run: |
        conan create . --profile:all="${CONAN_PROFILE}" -s build_type="${{ matrix.build_type }}"
